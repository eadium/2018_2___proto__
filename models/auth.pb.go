// Code generated by protoc-gen-go. DO NOT EDIT.
// source: auth.proto

package models

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type User struct {
	Id                   int64    `protobuf:"varint,1,opt,name=Id,json=id,proto3" json:"Id,omitempty"`
	Nickname             string   `protobuf:"bytes,2,opt,name=Nickname,json=nickname,proto3" json:"Nickname,omitempty"`
	Password             string   `protobuf:"bytes,3,opt,name=Password,json=password,proto3" json:"Password,omitempty"`
	Email                string   `protobuf:"bytes,4,opt,name=Email,json=email,proto3" json:"Email,omitempty"`
	Fullname             string   `protobuf:"bytes,5,opt,name=Fullname,json=fullname,proto3" json:"Fullname,omitempty"`
	Avatar               string   `protobuf:"bytes,6,opt,name=Avatar,json=avatar,proto3" json:"Avatar,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_auth_ff998895dd168232, []int{0}
}
func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (dst *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(dst, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *User) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *User) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetFullname() string {
	if m != nil {
		return m.Fullname
	}
	return ""
}

func (m *User) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

type SessionId struct {
	Id                   string   `protobuf:"bytes,1,opt,name=Id,json=id,proto3" json:"Id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionId) Reset()         { *m = SessionId{} }
func (m *SessionId) String() string { return proto.CompactTextString(m) }
func (*SessionId) ProtoMessage()    {}
func (*SessionId) Descriptor() ([]byte, []int) {
	return fileDescriptor_auth_ff998895dd168232, []int{1}
}
func (m *SessionId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionId.Unmarshal(m, b)
}
func (m *SessionId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionId.Marshal(b, m, deterministic)
}
func (dst *SessionId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionId.Merge(dst, src)
}
func (m *SessionId) XXX_Size() int {
	return xxx_messageInfo_SessionId.Size(m)
}
func (m *SessionId) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionId.DiscardUnknown(m)
}

var xxx_messageInfo_SessionId proto.InternalMessageInfo

func (m *SessionId) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Session struct {
	Id                   string   `protobuf:"bytes,1,opt,name=Id,json=id,proto3" json:"Id,omitempty"`
	Token                string   `protobuf:"bytes,2,opt,name=Token,json=token,proto3" json:"Token,omitempty"`
	TTL                  int64    `protobuf:"varint,3,opt,name=TTL,json=tTL,proto3" json:"TTL,omitempty"`
	User                 *User    `protobuf:"bytes,4,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Session) Reset()         { *m = Session{} }
func (m *Session) String() string { return proto.CompactTextString(m) }
func (*Session) ProtoMessage()    {}
func (*Session) Descriptor() ([]byte, []int) {
	return fileDescriptor_auth_ff998895dd168232, []int{2}
}
func (m *Session) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Session.Unmarshal(m, b)
}
func (m *Session) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Session.Marshal(b, m, deterministic)
}
func (dst *Session) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Session.Merge(dst, src)
}
func (m *Session) XXX_Size() int {
	return xxx_messageInfo_Session.Size(m)
}
func (m *Session) XXX_DiscardUnknown() {
	xxx_messageInfo_Session.DiscardUnknown(m)
}

var xxx_messageInfo_Session proto.InternalMessageInfo

func (m *Session) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Session) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *Session) GetTTL() int64 {
	if m != nil {
		return m.TTL
	}
	return 0
}

func (m *Session) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type Error struct {
	Code                 int32    `protobuf:"varint,1,opt,name=Code,json=code,proto3" json:"Code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=Message,json=message,proto3" json:"Message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}
func (*Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_auth_ff998895dd168232, []int{3}
}
func (m *Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Error.Unmarshal(m, b)
}
func (m *Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Error.Marshal(b, m, deterministic)
}
func (dst *Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error.Merge(dst, src)
}
func (m *Error) XXX_Size() int {
	return xxx_messageInfo_Error.Size(m)
}
func (m *Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Error proto.InternalMessageInfo

func (m *Error) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Error) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*User)(nil), "models.User")
	proto.RegisterType((*SessionId)(nil), "models.SessionId")
	proto.RegisterType((*Session)(nil), "models.Session")
	proto.RegisterType((*Error)(nil), "models.Error")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AuthClient is the client API for Auth service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthClient interface {
	Auth(ctx context.Context, in *User, opts ...grpc.CallOption) (*SessionId, error)
	Check(ctx context.Context, in *SessionId, opts ...grpc.CallOption) (*Session, error)
}

type authClient struct {
	cc *grpc.ClientConn
}

func NewAuthClient(cc *grpc.ClientConn) AuthClient {
	return &authClient{cc}
}

func (c *authClient) Auth(ctx context.Context, in *User, opts ...grpc.CallOption) (*SessionId, error) {
	out := new(SessionId)
	err := c.cc.Invoke(ctx, "/models.Auth/Auth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) Check(ctx context.Context, in *SessionId, opts ...grpc.CallOption) (*Session, error) {
	out := new(Session)
	err := c.cc.Invoke(ctx, "/models.Auth/Check", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthServer is the server API for Auth service.
type AuthServer interface {
	Auth(context.Context, *User) (*SessionId, error)
	Check(context.Context, *SessionId) (*Session, error)
}

func RegisterAuthServer(s *grpc.Server, srv AuthServer) {
	s.RegisterService(&_Auth_serviceDesc, srv)
}

func _Auth_Auth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).Auth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/models.Auth/Auth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).Auth(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_Check_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessionId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).Check(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/models.Auth/Check",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).Check(ctx, req.(*SessionId))
	}
	return interceptor(ctx, in, info, handler)
}

var _Auth_serviceDesc = grpc.ServiceDesc{
	ServiceName: "models.Auth",
	HandlerType: (*AuthServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Auth",
			Handler:    _Auth_Auth_Handler,
		},
		{
			MethodName: "Check",
			Handler:    _Auth_Check_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "auth.proto",
}

func init() { proto.RegisterFile("auth.proto", fileDescriptor_auth_ff998895dd168232) }

var fileDescriptor_auth_ff998895dd168232 = []byte{
	// 304 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x91, 0x5d, 0x4b, 0xf3, 0x30,
	0x14, 0xc7, 0xd7, 0xb5, 0xe9, 0xb6, 0xf3, 0x3c, 0xf8, 0x72, 0x10, 0x29, 0xf3, 0x66, 0xe4, 0x6a,
	0x5e, 0xb8, 0x8b, 0x89, 0x1f, 0x60, 0x8c, 0x09, 0x83, 0x29, 0x52, 0xeb, 0xbd, 0xb1, 0x89, 0xae,
	0xf4, 0x25, 0x23, 0x49, 0xf5, 0xab, 0xf8, 0x71, 0x25, 0x69, 0x26, 0x3a, 0xaf, 0xca, 0xaf, 0x3f,
	0xce, 0xc9, 0x3f, 0xff, 0x00, 0xb0, 0xd6, 0x6c, 0x67, 0x3b, 0x25, 0x8d, 0xc4, 0xb8, 0x96, 0x5c,
	0x54, 0x9a, 0x7e, 0x06, 0x10, 0x3d, 0x69, 0xa1, 0xf0, 0x08, 0xfa, 0x6b, 0x9e, 0x04, 0x93, 0x60,
	0x1a, 0xa6, 0xfd, 0x82, 0xe3, 0x18, 0x86, 0xf7, 0x45, 0x5e, 0x36, 0xac, 0x16, 0x49, 0x7f, 0x12,
	0x4c, 0x47, 0xe9, 0xb0, 0xf1, 0x6c, 0xdd, 0x03, 0xd3, 0xfa, 0x43, 0x2a, 0x9e, 0x84, 0x9d, 0xdb,
	0x79, 0xc6, 0x33, 0x20, 0xab, 0x9a, 0x15, 0x55, 0x12, 0x39, 0x41, 0x84, 0x05, 0x3b, 0x71, 0xdb,
	0x56, 0x95, 0xdb, 0x46, 0xba, 0x89, 0x57, 0xcf, 0x78, 0x0e, 0xf1, 0xe2, 0x9d, 0x19, 0xa6, 0x92,
	0xd8, 0x99, 0x98, 0x39, 0xa2, 0x17, 0x30, 0x7a, 0x14, 0x5a, 0x17, 0xb2, 0x59, 0xf3, 0x1f, 0xf1,
	0x46, 0x36, 0x1e, 0xcd, 0x61, 0xe0, 0xe5, 0xa1, 0xb2, 0x09, 0x32, 0x59, 0x8a, 0xc6, 0xc7, 0x26,
	0xc6, 0x02, 0x9e, 0x40, 0x98, 0x65, 0x1b, 0x17, 0x37, 0x4c, 0x43, 0x93, 0x6d, 0x70, 0x02, 0x51,
	0xab, 0x85, 0x72, 0x41, 0xff, 0xcd, 0xff, 0xcf, 0xba, 0x46, 0x66, 0xb6, 0x8d, 0xd4, 0x19, 0x7a,
	0x03, 0x64, 0xa5, 0x94, 0x54, 0x88, 0x10, 0x2d, 0x25, 0x17, 0xee, 0x10, 0x92, 0x46, 0xb9, 0xe4,
	0x02, 0x13, 0x18, 0xdc, 0x09, 0xad, 0xd9, 0xdb, 0xbe, 0x9f, 0x41, 0xdd, 0xe1, 0xfc, 0x19, 0xa2,
	0x45, 0x6b, 0xb6, 0x78, 0xe9, 0xbf, 0xbf, 0x56, 0x8f, 0x4f, 0xf7, 0xf4, 0x7d, 0x39, 0xda, 0xc3,
	0x2b, 0x20, 0xcb, 0xad, 0xc8, 0x4b, 0xfc, 0x6b, 0xc7, 0xc7, 0x07, 0xbf, 0x68, 0xef, 0x25, 0x76,
	0x8f, 0x78, 0xfd, 0x15, 0x00, 0x00, 0xff, 0xff, 0x92, 0xd2, 0x0a, 0xfe, 0xd2, 0x01, 0x00, 0x00,
}
